{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","resp","text","value","onChange","target","getGift","category","a","console","log","fetch","encodeURI","json","data","gifs","map","images","id","url","title","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","img","useFetchGifs","key","GifExpertApp","categoria","ReactDOM","render","document","getElementById"],"mappings":"6MAsCeA,EAjCK,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAAkB,EAEAC,mBAAS,IAFT,mBAE7BC,EAF6B,KAEjBC,EAFiB,KAiBpC,OAEM,0BAAMC,SAXS,SAACC,GACdA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,OAOlB,2BACQO,KAAK,OACLC,MAAOT,EACPU,SApBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACrBC,QAAQC,IAAIH,GADS,SAEFI,MAAM,GAAD,OAJb,iCAIa,oBAAuBC,UAAUL,GAAjC,6BALd,qCAGW,cAEfN,EAFe,gBAGAA,EAAKY,OAHL,uBAGdC,EAHc,EAGdA,KAGDC,EAAOD,EAAKE,KAAI,YAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MACrC,MAAO,CACHF,KACAD,OAAQA,EAAOI,iBAAiBF,IAChCA,MACAC,YAXa,kBAgBZL,GAhBY,4CAAH,sDCSLO,EAVK,SAAC,GAA2B,EAA1BH,IAA0B,EAAtBD,GAAuB,IAApBE,EAAmB,EAAnBA,MAAOH,EAAY,EAAZA,OAEhC,OADAR,QAAQC,IAAIO,GAER,yBAAKM,UAAU,0CACX,yBAAKC,IAAKP,EAAQQ,IAAKL,IACvB,2BAAIA,KCkBDM,EAnBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEdE,QAAQC,IAAI,CAAEH,aAFc,MCFJ,SAACA,GAAY,IAAD,EAENd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJmB,mBAEzBC,EAFyB,KAElBC,EAFkB,KAmBhC,OAXAC,qBAAW,WAEPxB,EAAQC,GAAUwB,MAAK,SAAAC,GACfH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAGGqB,EDdcK,CAAa1B,GAA9BO,EAHoB,EAGpBA,KAAMa,EAHc,EAGdA,QAEN,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,2BAAb,WACZ,yBAAKA,UAAU,aAEPT,EAAKE,KAAI,SAAAgB,GAAG,OAAK,kBAAC,EAAD,eAAaE,IAAKF,EAAId,IAAOc,UEY3DG,EAvBM,WAAO,IAAD,EAEW1C,mBAAS,CAAC,iBAFrB,mBAEhB2C,EAFgB,KAEL5C,EAFK,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,aAAcA,IAC3B,6BAEA,4BAEQ4C,EAAUpB,KAAI,SAAAT,GAAQ,OAClB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,UCftC8B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9bbad71e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({setCategoria}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        \r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n            e.preventDefault()\r\n\r\n            if (inputValue.trim().length > 2) {\r\n                setCategoria(resp=> [ inputValue ,...resp]);\r\n                setinputValue('');\r\n            }\r\n    }\r\n\r\n    return (\r\n        \r\n          <form onSubmit={handleSubmit}>\r\n            <input \r\n                    text='text'\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>  \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategoria: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","const api = 'pWL3dAEkarsQvk2UBGtJNLiynckN1b5V';\r\nconst urlBase = `https://api.giphy.com/v1/gifs/`\r\n\r\nexport const getGift = async (category) => {\r\n  console.log(category)\r\n  const resp = await fetch(`${urlBase}search?q=${encodeURI(category)}&limit=10&api_key=${api}`)\r\n  const {data} = await resp.json();\r\n//   console.log(data);\r\n\r\n  const gifs = data.map(({images, id, url, title}) => {\r\n      return {\r\n          id,\r\n          images: images.downsized_medium.url,\r\n          url,\r\n          title\r\n        }\r\n    })\r\n\r\n    // console.log(gifs)\r\n    return gifs\r\n }","import React from 'react'\r\n\r\nconst GifGridItem = ({url,id,title, images}) => {\r\n    console.log(images)\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={images} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","// import React, { useState, useEffect, Fragment } from 'react'\r\nimport React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    console.log({ category });\r\n    const { data, loading} = useFetchGifs(category);\r\n\r\n            return (\r\n                <>\r\n                    <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n                    {loading && <p className='animate__animated flash'>Loading</p>}\r\n                    <div className=\"card-grid\">\r\n                        { \r\n                            data.map(img => (<GifGridItem key={img.id}{...img} />)) \r\n                        }   \r\n                    </div>\r\n                        \r\n                </>\r\n            )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect,  useState } from \"react\"\r\nimport { getGift } from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n        const [state, setstate] = useState({\r\n            data: [],\r\n            loading: true\r\n\r\n        })\r\n\r\n        useEffect( () => {\r\n\r\n            getGift(category).then(img => {\r\n                    setstate({\r\n                        data: img,\r\n                        loading: false\r\n                    })\r\n            })\r\n        }, [category])\r\n\r\n\r\n        return state;\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n// import ReactDOM from 'react-dom'\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categoria, setCategoria] = useState(['One Push Man']);\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategoria={setCategoria}/>\r\n            <hr />\r\n            \r\n            <ol>\r\n                { \r\n                    categoria.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}/>\r\n                    )) \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n// GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr>\n\n"],"sourceRoot":""}